Terminals unused in grammar

    '-'


Grammar

    0 $accept: program $end

    1 program: fun_def_list

    2 fun_def_list: fun_def
    3             | fun_def_list fun_def

    4 fun_def: ID ID '(' var_dec_seq ')' '{' stmts '}'

    5 var_dec_seq: ε
    6            | var_dec_seq1

    7 var_dec_seq1: var_dec
    8             | var_dec_seq1 ',' var_dec

    9 var_dec: ID ID
   10        | ID ID '=' exp

   11 stmts: stmt
   12      | stmts stmt

   13 stmt: exp ';'
   14     | var_dec ';'
   15     | IF '(' exp ')' '{' stmts '}'
   16     | IF '(' exp ')' '{' stmts '}' ELSE '{' stmts '}'
   17     | WHILE '(' exp ')' '{' stmts '}'
   18     | '{' stmts '}'

   19 exp_seq: exp
   20        | exp_seq ',' exp

   21 exp: ε
   22    | ID
   23    | NUM
   24    | ID '=' exp
   25    | exp '+' exp
   26    | ID '(' exp_seq ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 4 15 16 17 26
    ')' (41) 4 15 16 17 26
    '+' (43) 25
    ',' (44) 8 20
    '-' (45)
    ';' (59) 13 14
    '=' (61) 10 24
    '{' (123) 4 15 16 17 18
    '}' (125) 4 15 16 17 18
    error (256)
    NUM <ival> (258) 23
    ID <sval> (259) 4 9 10 22 24 26
    IF (260) 15 16
    ELSE (261) 16
    WHILE (262) 17


Nonterminals, with rules where they appear

    $accept (17)
        on left: 0
    program (18)
        on left: 1
        on right: 0
    fun_def_list (19)
        on left: 2 3
        on right: 1 3
    fun_def (20)
        on left: 4
        on right: 2 3
    var_dec_seq (21)
        on left: 5 6
        on right: 4
    var_dec_seq1 (22)
        on left: 7 8
        on right: 6 8
    var_dec (23)
        on left: 9 10
        on right: 7 8 14
    stmts (24)
        on left: 11 12
        on right: 4 12 15 16 17 18
    stmt (25)
        on left: 13 14 15 16 17 18
        on right: 11 12
    exp_seq (26)
        on left: 19 20
        on right: 20 26
    exp <ival> (27)
        on left: 21 22 23 24 25 26
        on right: 10 13 15 16 17 19 20 24 25


State 0

    0 $accept: • program $end

    ID  shift, and go to state 1

    program       go to state 2
    fun_def_list  go to state 3
    fun_def       go to state 4


State 1

    4 fun_def: ID • ID '(' var_dec_seq ')' '{' stmts '}'

    ID  shift, and go to state 5


State 2

    0 $accept: program • $end

    $end  shift, and go to state 6


State 3

    1 program: fun_def_list •
    3 fun_def_list: fun_def_list • fun_def

    ID  shift, and go to state 1

    $default  reduce using rule 1 (program)

    fun_def  go to state 7


State 4

    2 fun_def_list: fun_def •

    $default  reduce using rule 2 (fun_def_list)


State 5

    4 fun_def: ID ID • '(' var_dec_seq ')' '{' stmts '}'

    '('  shift, and go to state 8


State 6

    0 $accept: program $end •

    $default  accept


State 7

    3 fun_def_list: fun_def_list fun_def •

    $default  reduce using rule 3 (fun_def_list)


State 8

    4 fun_def: ID ID '(' • var_dec_seq ')' '{' stmts '}'

    ID  shift, and go to state 9

    $default  reduce using rule 5 (var_dec_seq)

    var_dec_seq   go to state 10
    var_dec_seq1  go to state 11
    var_dec       go to state 12


State 9

    9 var_dec: ID • ID
   10        | ID • ID '=' exp

    ID  shift, and go to state 13


State 10

    4 fun_def: ID ID '(' var_dec_seq • ')' '{' stmts '}'

    ')'  shift, and go to state 14


State 11

    6 var_dec_seq: var_dec_seq1 •
    8 var_dec_seq1: var_dec_seq1 • ',' var_dec

    ','  shift, and go to state 15

    $default  reduce using rule 6 (var_dec_seq)


State 12

    7 var_dec_seq1: var_dec •

    $default  reduce using rule 7 (var_dec_seq1)


State 13

    9 var_dec: ID ID •
   10        | ID ID • '=' exp

    '='  shift, and go to state 16

    $default  reduce using rule 9 (var_dec)


State 14

    4 fun_def: ID ID '(' var_dec_seq ')' • '{' stmts '}'

    '{'  shift, and go to state 17


State 15

    8 var_dec_seq1: var_dec_seq1 ',' • var_dec

    ID  shift, and go to state 9

    var_dec  go to state 18


State 16

   10 var_dec: ID ID '=' • exp

    NUM  shift, and go to state 19
    ID   shift, and go to state 20

    $default  reduce using rule 21 (exp)

    exp  go to state 21


State 17

    4 fun_def: ID ID '(' var_dec_seq ')' '{' • stmts '}'

    NUM    shift, and go to state 19
    ID     shift, and go to state 22
    IF     shift, and go to state 23
    WHILE  shift, and go to state 24
    '{'    shift, and go to state 25

    $default  reduce using rule 21 (exp)

    var_dec  go to state 26
    stmts    go to state 27
    stmt     go to state 28
    exp      go to state 29


State 18

    8 var_dec_seq1: var_dec_seq1 ',' var_dec •

    $default  reduce using rule 8 (var_dec_seq1)


State 19

   23 exp: NUM •

    $default  reduce using rule 23 (exp)


State 20

   22 exp: ID •
   24    | ID • '=' exp
   26    | ID • '(' exp_seq ')'

    '='  shift, and go to state 30
    '('  shift, and go to state 31

    $default  reduce using rule 22 (exp)


State 21

   10 var_dec: ID ID '=' exp •
   25 exp: exp • '+' exp

    '+'  shift, and go to state 32

    $default  reduce using rule 10 (var_dec)


State 22

    9 var_dec: ID • ID
   10        | ID • ID '=' exp
   22 exp: ID •
   24    | ID • '=' exp
   26    | ID • '(' exp_seq ')'

    ID   shift, and go to state 13
    '='  shift, and go to state 30
    '('  shift, and go to state 31

    $default  reduce using rule 22 (exp)


State 23

   15 stmt: IF • '(' exp ')' '{' stmts '}'
   16     | IF • '(' exp ')' '{' stmts '}' ELSE '{' stmts '}'

    '('  shift, and go to state 33


State 24

   17 stmt: WHILE • '(' exp ')' '{' stmts '}'

    '('  shift, and go to state 34


State 25

   18 stmt: '{' • stmts '}'

    NUM    shift, and go to state 19
    ID     shift, and go to state 22
    IF     shift, and go to state 23
    WHILE  shift, and go to state 24
    '{'    shift, and go to state 25

    $default  reduce using rule 21 (exp)

    var_dec  go to state 26
    stmts    go to state 35
    stmt     go to state 28
    exp      go to state 29


State 26

   14 stmt: var_dec • ';'

    ';'  shift, and go to state 36


State 27

    4 fun_def: ID ID '(' var_dec_seq ')' '{' stmts • '}'
   12 stmts: stmts • stmt

    NUM    shift, and go to state 19
    ID     shift, and go to state 22
    IF     shift, and go to state 23
    WHILE  shift, and go to state 24
    '{'    shift, and go to state 25
    '}'    shift, and go to state 37

    $default  reduce using rule 21 (exp)

    var_dec  go to state 26
    stmt     go to state 38
    exp      go to state 29


State 28

   11 stmts: stmt •

    $default  reduce using rule 11 (stmts)


State 29

   13 stmt: exp • ';'
   25 exp: exp • '+' exp

    '+'  shift, and go to state 32
    ';'  shift, and go to state 39


State 30

   24 exp: ID '=' • exp

    NUM  shift, and go to state 19
    ID   shift, and go to state 20

    $default  reduce using rule 21 (exp)

    exp  go to state 40


State 31

   26 exp: ID '(' • exp_seq ')'

    NUM  shift, and go to state 19
    ID   shift, and go to state 20

    $default  reduce using rule 21 (exp)

    exp_seq  go to state 41
    exp      go to state 42


State 32

   25 exp: exp '+' • exp

    NUM  shift, and go to state 19
    ID   shift, and go to state 20

    $default  reduce using rule 21 (exp)

    exp  go to state 43


State 33

   15 stmt: IF '(' • exp ')' '{' stmts '}'
   16     | IF '(' • exp ')' '{' stmts '}' ELSE '{' stmts '}'

    NUM  shift, and go to state 19
    ID   shift, and go to state 20

    $default  reduce using rule 21 (exp)

    exp  go to state 44


State 34

   17 stmt: WHILE '(' • exp ')' '{' stmts '}'

    NUM  shift, and go to state 19
    ID   shift, and go to state 20

    $default  reduce using rule 21 (exp)

    exp  go to state 45


State 35

   12 stmts: stmts • stmt
   18 stmt: '{' stmts • '}'

    NUM    shift, and go to state 19
    ID     shift, and go to state 22
    IF     shift, and go to state 23
    WHILE  shift, and go to state 24
    '{'    shift, and go to state 25
    '}'    shift, and go to state 46

    $default  reduce using rule 21 (exp)

    var_dec  go to state 26
    stmt     go to state 38
    exp      go to state 29


State 36

   14 stmt: var_dec ';' •

    $default  reduce using rule 14 (stmt)


State 37

    4 fun_def: ID ID '(' var_dec_seq ')' '{' stmts '}' •

    $default  reduce using rule 4 (fun_def)


State 38

   12 stmts: stmts stmt •

    $default  reduce using rule 12 (stmts)


State 39

   13 stmt: exp ';' •

    $default  reduce using rule 13 (stmt)


State 40

   24 exp: ID '=' exp •
   25    | exp • '+' exp

    $default  reduce using rule 24 (exp)


State 41

   20 exp_seq: exp_seq • ',' exp
   26 exp: ID '(' exp_seq • ')'

    ')'  shift, and go to state 47
    ','  shift, and go to state 48


State 42

   19 exp_seq: exp •
   25 exp: exp • '+' exp

    '+'  shift, and go to state 32

    $default  reduce using rule 19 (exp_seq)


State 43

   25 exp: exp • '+' exp
   25    | exp '+' exp •

    $default  reduce using rule 25 (exp)


State 44

   15 stmt: IF '(' exp • ')' '{' stmts '}'
   16     | IF '(' exp • ')' '{' stmts '}' ELSE '{' stmts '}'
   25 exp: exp • '+' exp

    '+'  shift, and go to state 32
    ')'  shift, and go to state 49


State 45

   17 stmt: WHILE '(' exp • ')' '{' stmts '}'
   25 exp: exp • '+' exp

    '+'  shift, and go to state 32
    ')'  shift, and go to state 50


State 46

   18 stmt: '{' stmts '}' •

    $default  reduce using rule 18 (stmt)


State 47

   26 exp: ID '(' exp_seq ')' •

    $default  reduce using rule 26 (exp)


State 48

   20 exp_seq: exp_seq ',' • exp

    NUM  shift, and go to state 19
    ID   shift, and go to state 20

    $default  reduce using rule 21 (exp)

    exp  go to state 51


State 49

   15 stmt: IF '(' exp ')' • '{' stmts '}'
   16     | IF '(' exp ')' • '{' stmts '}' ELSE '{' stmts '}'

    '{'  shift, and go to state 52


State 50

   17 stmt: WHILE '(' exp ')' • '{' stmts '}'

    '{'  shift, and go to state 53


State 51

   20 exp_seq: exp_seq ',' exp •
   25 exp: exp • '+' exp

    '+'  shift, and go to state 32

    $default  reduce using rule 20 (exp_seq)


State 52

   15 stmt: IF '(' exp ')' '{' • stmts '}'
   16     | IF '(' exp ')' '{' • stmts '}' ELSE '{' stmts '}'

    NUM    shift, and go to state 19
    ID     shift, and go to state 22
    IF     shift, and go to state 23
    WHILE  shift, and go to state 24
    '{'    shift, and go to state 25

    $default  reduce using rule 21 (exp)

    var_dec  go to state 26
    stmts    go to state 54
    stmt     go to state 28
    exp      go to state 29


State 53

   17 stmt: WHILE '(' exp ')' '{' • stmts '}'

    NUM    shift, and go to state 19
    ID     shift, and go to state 22
    IF     shift, and go to state 23
    WHILE  shift, and go to state 24
    '{'    shift, and go to state 25

    $default  reduce using rule 21 (exp)

    var_dec  go to state 26
    stmts    go to state 55
    stmt     go to state 28
    exp      go to state 29


State 54

   12 stmts: stmts • stmt
   15 stmt: IF '(' exp ')' '{' stmts • '}'
   16     | IF '(' exp ')' '{' stmts • '}' ELSE '{' stmts '}'

    NUM    shift, and go to state 19
    ID     shift, and go to state 22
    IF     shift, and go to state 23
    WHILE  shift, and go to state 24
    '{'    shift, and go to state 25
    '}'    shift, and go to state 56

    $default  reduce using rule 21 (exp)

    var_dec  go to state 26
    stmt     go to state 38
    exp      go to state 29


State 55

   12 stmts: stmts • stmt
   17 stmt: WHILE '(' exp ')' '{' stmts • '}'

    NUM    shift, and go to state 19
    ID     shift, and go to state 22
    IF     shift, and go to state 23
    WHILE  shift, and go to state 24
    '{'    shift, and go to state 25
    '}'    shift, and go to state 57

    $default  reduce using rule 21 (exp)

    var_dec  go to state 26
    stmt     go to state 38
    exp      go to state 29


State 56

   15 stmt: IF '(' exp ')' '{' stmts '}' •
   16     | IF '(' exp ')' '{' stmts '}' • ELSE '{' stmts '}'

    ELSE  shift, and go to state 58

    $default  reduce using rule 15 (stmt)


State 57

   17 stmt: WHILE '(' exp ')' '{' stmts '}' •

    $default  reduce using rule 17 (stmt)


State 58

   16 stmt: IF '(' exp ')' '{' stmts '}' ELSE • '{' stmts '}'

    '{'  shift, and go to state 59


State 59

   16 stmt: IF '(' exp ')' '{' stmts '}' ELSE '{' • stmts '}'

    NUM    shift, and go to state 19
    ID     shift, and go to state 22
    IF     shift, and go to state 23
    WHILE  shift, and go to state 24
    '{'    shift, and go to state 25

    $default  reduce using rule 21 (exp)

    var_dec  go to state 26
    stmts    go to state 60
    stmt     go to state 28
    exp      go to state 29


State 60

   12 stmts: stmts • stmt
   16 stmt: IF '(' exp ')' '{' stmts '}' ELSE '{' stmts • '}'

    NUM    shift, and go to state 19
    ID     shift, and go to state 22
    IF     shift, and go to state 23
    WHILE  shift, and go to state 24
    '{'    shift, and go to state 25
    '}'    shift, and go to state 61

    $default  reduce using rule 21 (exp)

    var_dec  go to state 26
    stmt     go to state 38
    exp      go to state 29


State 61

   16 stmt: IF '(' exp ')' '{' stmts '}' ELSE '{' stmts '}' •

    $default  reduce using rule 16 (stmt)
