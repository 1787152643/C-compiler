Terminals unused in grammar

    NEG


Grammar

    0 $accept: program $end

    1 program: fun_def_list

    2 fun_def_list: fun_def
    3             | fun_def_list fun_def

    4 fun_def: ID ID '(' var_dec_seq ')' '{' stmts '}'

    5 var_dec_seq: ε
    6            | var_dec_seq1

    7 var_dec_seq1: var_dec
    8             | var_dec_seq1 ',' var_dec

    9 var_dec: INT declarator
   10        | INT ID '=' exp

   11 declarator: ID
   12           | '*' declarator

   13 stmts: stmt
   14      | stmts M stmt

   15 stmt: ';'
   16     | exp ';'
   17     | var_dec ';'
   18     | IF '(' condition ')' M bs '{' stmts '}' es
   19     | IF '(' condition ')' M bs '{' stmts '}' es N ELSE M bs '{' stmts '}' es
   20     | WHILE M '(' condition ')' M bs '{' stmts '}' es

   21 condition: condition OR M condition
   22          | condition AND M condition
   23          | '!' condition
   24          | '(' condition ')'
   25          | exp EQ exp
   26          | exp NE exp
   27          | exp LT exp
   28          | exp LE exp
   29          | exp GT exp
   30          | exp GE exp
   31          | error

   32 M: ε

   33 N: ε

   34 bs: ε

   35 es: ε

   36 exp_seq: exp
   37        | exp_seq ',' exp

   38 exp: ID
   39    | NUM
   40    | ID '=' exp
   41    | exp '+' exp
   42    | exp '-' exp
   43    | exp '*' exp
   44    | exp '/' exp
   45    | '*' exp
   46    | ID '(' exp_seq ')'
   47    | error


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 23
    '(' (40) 4 18 19 20 24 46
    ')' (41) 4 18 19 20 24 46
    '*' (42) 12 43 45
    '+' (43) 41
    ',' (44) 8 37
    '-' (45) 42
    '/' (47) 44
    ';' (59) 15 16 17
    '=' (61) 10 40
    '{' (123) 4 18 19 20
    '}' (125) 4 18 19 20
    error (256) 31 47
    NUM <ival> (258) 39
    ID <sval> (259) 4 10 11 38 40 46
    IF (260) 18 19
    ELSE (261) 19
    WHILE (262) 20
    INT (263) 9 10
    AND (264) 22
    OR (265) 21
    EQ (266) 25
    NE (267) 26
    LT (268) 27
    LE (269) 28
    GT (270) 29
    GE (271) 30
    NEG (272)
    STAR (273)


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    program (32)
        on left: 1
        on right: 0
    fun_def_list (33)
        on left: 2 3
        on right: 1 3
    fun_def (34)
        on left: 4
        on right: 2 3
    var_dec_seq (35)
        on left: 5 6
        on right: 4
    var_dec_seq1 (36)
        on left: 7 8
        on right: 6 8
    var_dec <dec> (37)
        on left: 9 10
        on right: 7 8 17
    declarator <dctor> (38)
        on left: 11 12
        on right: 9 12
    stmts <stmt> (39)
        on left: 13 14
        on right: 4 14 18 19 20
    stmt <stmt> (40)
        on left: 15 16 17 18 19 20
        on right: 13 14
    condition <con> (41)
        on left: 21 22 23 24 25 26 27 28 29 30 31
        on right: 18 19 20 21 22 23 24
    M <m> (42)
        on left: 32
        on right: 14 18 19 20 21 22
    N <stmt> (43)
        on left: 33
        on right: 19
    bs (44)
        on left: 34
        on right: 18 19 20
    es (45)
        on left: 35
        on right: 18 19 20
    exp_seq (46)
        on left: 36 37
        on right: 37 46
    exp <exp> (47)
        on left: 38 39 40 41 42 43 44 45 46 47
        on right: 10 16 25 26 27 28 29 30 36 37 40 41 42 43 44 45


State 0

    0 $accept: • program $end

    ID  shift, and go to state 1

    program       go to state 2
    fun_def_list  go to state 3
    fun_def       go to state 4


State 1

    4 fun_def: ID • ID '(' var_dec_seq ')' '{' stmts '}'

    ID  shift, and go to state 5


State 2

    0 $accept: program • $end

    $end  shift, and go to state 6


State 3

    1 program: fun_def_list •
    3 fun_def_list: fun_def_list • fun_def

    ID  shift, and go to state 1

    $default  reduce using rule 1 (program)

    fun_def  go to state 7


State 4

    2 fun_def_list: fun_def •

    $default  reduce using rule 2 (fun_def_list)


State 5

    4 fun_def: ID ID • '(' var_dec_seq ')' '{' stmts '}'

    '('  shift, and go to state 8


State 6

    0 $accept: program $end •

    $default  accept


State 7

    3 fun_def_list: fun_def_list fun_def •

    $default  reduce using rule 3 (fun_def_list)


State 8

    4 fun_def: ID ID '(' • var_dec_seq ')' '{' stmts '}'

    INT  shift, and go to state 9

    $default  reduce using rule 5 (var_dec_seq)

    var_dec_seq   go to state 10
    var_dec_seq1  go to state 11
    var_dec       go to state 12


State 9

    9 var_dec: INT • declarator
   10        | INT • ID '=' exp

    ID   shift, and go to state 13
    '*'  shift, and go to state 14

    declarator  go to state 15


State 10

    4 fun_def: ID ID '(' var_dec_seq • ')' '{' stmts '}'

    ')'  shift, and go to state 16


State 11

    6 var_dec_seq: var_dec_seq1 •
    8 var_dec_seq1: var_dec_seq1 • ',' var_dec

    ','  shift, and go to state 17

    $default  reduce using rule 6 (var_dec_seq)


State 12

    7 var_dec_seq1: var_dec •

    $default  reduce using rule 7 (var_dec_seq1)


State 13

   10 var_dec: INT ID • '=' exp
   11 declarator: ID •

    '='  shift, and go to state 18

    $default  reduce using rule 11 (declarator)


State 14

   12 declarator: '*' • declarator

    ID   shift, and go to state 19
    '*'  shift, and go to state 14

    declarator  go to state 20


State 15

    9 var_dec: INT declarator •

    $default  reduce using rule 9 (var_dec)


State 16

    4 fun_def: ID ID '(' var_dec_seq ')' • '{' stmts '}'

    '{'  shift, and go to state 21


State 17

    8 var_dec_seq1: var_dec_seq1 ',' • var_dec

    INT  shift, and go to state 9

    var_dec  go to state 22


State 18

   10 var_dec: INT ID '=' • exp

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '*'    shift, and go to state 26

    exp  go to state 27


State 19

   11 declarator: ID •

    $default  reduce using rule 11 (declarator)


State 20

   12 declarator: '*' declarator •

    $default  reduce using rule 12 (declarator)


State 21

    4 fun_def: ID ID '(' var_dec_seq ')' '{' • stmts '}'

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    IF     shift, and go to state 28
    WHILE  shift, and go to state 29
    INT    shift, and go to state 9
    '*'    shift, and go to state 26
    ';'    shift, and go to state 30

    var_dec  go to state 31
    stmts    go to state 32
    stmt     go to state 33
    exp      go to state 34


State 22

    8 var_dec_seq1: var_dec_seq1 ',' var_dec •

    $default  reduce using rule 8 (var_dec_seq1)


State 23

   47 exp: error •

    $default  reduce using rule 47 (exp)


State 24

   39 exp: NUM •

    $default  reduce using rule 39 (exp)


State 25

   38 exp: ID •
   40    | ID • '=' exp
   46    | ID • '(' exp_seq ')'

    '='  shift, and go to state 35
    '('  shift, and go to state 36

    $default  reduce using rule 38 (exp)


State 26

   45 exp: '*' • exp

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '*'    shift, and go to state 26

    exp  go to state 37


State 27

   10 var_dec: INT ID '=' exp •
   41 exp: exp • '+' exp
   42    | exp • '-' exp
   43    | exp • '*' exp
   44    | exp • '/' exp

    '-'  shift, and go to state 38
    '+'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 10 (var_dec)


State 28

   18 stmt: IF • '(' condition ')' M bs '{' stmts '}' es
   19     | IF • '(' condition ')' M bs '{' stmts '}' es N ELSE M bs '{' stmts '}' es

    '('  shift, and go to state 42


State 29

   20 stmt: WHILE • M '(' condition ')' M bs '{' stmts '}' es

    $default  reduce using rule 32 (M)

    M  go to state 43


State 30

   15 stmt: ';' •

    $default  reduce using rule 15 (stmt)


State 31

   17 stmt: var_dec • ';'

    ';'  shift, and go to state 44


State 32

    4 fun_def: ID ID '(' var_dec_seq ')' '{' stmts • '}'
   14 stmts: stmts • M stmt

    '}'  shift, and go to state 45

    $default  reduce using rule 32 (M)

    M  go to state 46


State 33

   13 stmts: stmt •

    $default  reduce using rule 13 (stmts)


State 34

   16 stmt: exp • ';'
   41 exp: exp • '+' exp
   42    | exp • '-' exp
   43    | exp • '*' exp
   44    | exp • '/' exp

    '-'  shift, and go to state 38
    '+'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41
    ';'  shift, and go to state 47


State 35

   40 exp: ID '=' • exp

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '*'    shift, and go to state 26

    exp  go to state 48


State 36

   46 exp: ID '(' • exp_seq ')'

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '*'    shift, and go to state 26

    exp_seq  go to state 49
    exp      go to state 50


State 37

   41 exp: exp • '+' exp
   42    | exp • '-' exp
   43    | exp • '*' exp
   44    | exp • '/' exp
   45    | '*' exp •

    $default  reduce using rule 45 (exp)


State 38

   42 exp: exp '-' • exp

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '*'    shift, and go to state 26

    exp  go to state 51


State 39

   41 exp: exp '+' • exp

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '*'    shift, and go to state 26

    exp  go to state 52


State 40

   43 exp: exp '*' • exp

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '*'    shift, and go to state 26

    exp  go to state 53


State 41

   44 exp: exp '/' • exp

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '*'    shift, and go to state 26

    exp  go to state 54


State 42

   18 stmt: IF '(' • condition ')' M bs '{' stmts '}' es
   19     | IF '(' • condition ')' M bs '{' stmts '}' es N ELSE M bs '{' stmts '}' es

    error  shift, and go to state 55
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '!'    shift, and go to state 56
    '*'    shift, and go to state 26
    '('    shift, and go to state 57

    condition  go to state 58
    exp        go to state 59


State 43

   20 stmt: WHILE M • '(' condition ')' M bs '{' stmts '}' es

    '('  shift, and go to state 60


State 44

   17 stmt: var_dec ';' •

    $default  reduce using rule 17 (stmt)


State 45

    4 fun_def: ID ID '(' var_dec_seq ')' '{' stmts '}' •

    $default  reduce using rule 4 (fun_def)


State 46

   14 stmts: stmts M • stmt

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    IF     shift, and go to state 28
    WHILE  shift, and go to state 29
    INT    shift, and go to state 9
    '*'    shift, and go to state 26
    ';'    shift, and go to state 30

    var_dec  go to state 31
    stmt     go to state 61
    exp      go to state 34


State 47

   16 stmt: exp ';' •

    $default  reduce using rule 16 (stmt)


State 48

   40 exp: ID '=' exp •
   41    | exp • '+' exp
   42    | exp • '-' exp
   43    | exp • '*' exp
   44    | exp • '/' exp

    '-'  shift, and go to state 38
    '+'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 40 (exp)


State 49

   37 exp_seq: exp_seq • ',' exp
   46 exp: ID '(' exp_seq • ')'

    ')'  shift, and go to state 62
    ','  shift, and go to state 63


State 50

   36 exp_seq: exp •
   41 exp: exp • '+' exp
   42    | exp • '-' exp
   43    | exp • '*' exp
   44    | exp • '/' exp

    '-'  shift, and go to state 38
    '+'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 36 (exp_seq)


State 51

   41 exp: exp • '+' exp
   42    | exp • '-' exp
   42    | exp '-' exp •
   43    | exp • '*' exp
   44    | exp • '/' exp

    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 42 (exp)


State 52

   41 exp: exp • '+' exp
   41    | exp '+' exp •
   42    | exp • '-' exp
   43    | exp • '*' exp
   44    | exp • '/' exp

    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 41 (exp)


State 53

   41 exp: exp • '+' exp
   42    | exp • '-' exp
   43    | exp • '*' exp
   43    | exp '*' exp •
   44    | exp • '/' exp

    $default  reduce using rule 43 (exp)


State 54

   41 exp: exp • '+' exp
   42    | exp • '-' exp
   43    | exp • '*' exp
   44    | exp • '/' exp
   44    | exp '/' exp •

    $default  reduce using rule 44 (exp)


State 55

   31 condition: error •
   47 exp: error •

    AND       reduce using rule 31 (condition)
    OR        reduce using rule 31 (condition)
    ')'       reduce using rule 31 (condition)
    $default  reduce using rule 47 (exp)


State 56

   23 condition: '!' • condition

    error  shift, and go to state 55
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '!'    shift, and go to state 56
    '*'    shift, and go to state 26
    '('    shift, and go to state 57

    condition  go to state 64
    exp        go to state 59


State 57

   24 condition: '(' • condition ')'

    error  shift, and go to state 55
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '!'    shift, and go to state 56
    '*'    shift, and go to state 26
    '('    shift, and go to state 57

    condition  go to state 65
    exp        go to state 59


State 58

   18 stmt: IF '(' condition • ')' M bs '{' stmts '}' es
   19     | IF '(' condition • ')' M bs '{' stmts '}' es N ELSE M bs '{' stmts '}' es
   21 condition: condition • OR M condition
   22          | condition • AND M condition

    AND  shift, and go to state 66
    OR   shift, and go to state 67
    ')'  shift, and go to state 68


State 59

   25 condition: exp • EQ exp
   26          | exp • NE exp
   27          | exp • LT exp
   28          | exp • LE exp
   29          | exp • GT exp
   30          | exp • GE exp
   41 exp: exp • '+' exp
   42    | exp • '-' exp
   43    | exp • '*' exp
   44    | exp • '/' exp

    EQ   shift, and go to state 69
    NE   shift, and go to state 70
    LT   shift, and go to state 71
    LE   shift, and go to state 72
    GT   shift, and go to state 73
    GE   shift, and go to state 74
    '-'  shift, and go to state 38
    '+'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41


State 60

   20 stmt: WHILE M '(' • condition ')' M bs '{' stmts '}' es

    error  shift, and go to state 55
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '!'    shift, and go to state 56
    '*'    shift, and go to state 26
    '('    shift, and go to state 57

    condition  go to state 75
    exp        go to state 59


State 61

   14 stmts: stmts M stmt •

    $default  reduce using rule 14 (stmts)


State 62

   46 exp: ID '(' exp_seq ')' •

    $default  reduce using rule 46 (exp)


State 63

   37 exp_seq: exp_seq ',' • exp

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '*'    shift, and go to state 26

    exp  go to state 76


State 64

   21 condition: condition • OR M condition
   22          | condition • AND M condition
   23          | '!' condition •

    $default  reduce using rule 23 (condition)


State 65

   21 condition: condition • OR M condition
   22          | condition • AND M condition
   24          | '(' condition • ')'

    AND  shift, and go to state 66
    OR   shift, and go to state 67
    ')'  shift, and go to state 77


State 66

   22 condition: condition AND • M condition

    $default  reduce using rule 32 (M)

    M  go to state 78


State 67

   21 condition: condition OR • M condition

    $default  reduce using rule 32 (M)

    M  go to state 79


State 68

   18 stmt: IF '(' condition ')' • M bs '{' stmts '}' es
   19     | IF '(' condition ')' • M bs '{' stmts '}' es N ELSE M bs '{' stmts '}' es

    $default  reduce using rule 32 (M)

    M  go to state 80


State 69

   25 condition: exp EQ • exp

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '*'    shift, and go to state 26

    exp  go to state 81


State 70

   26 condition: exp NE • exp

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '*'    shift, and go to state 26

    exp  go to state 82


State 71

   27 condition: exp LT • exp

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '*'    shift, and go to state 26

    exp  go to state 83


State 72

   28 condition: exp LE • exp

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '*'    shift, and go to state 26

    exp  go to state 84


State 73

   29 condition: exp GT • exp

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '*'    shift, and go to state 26

    exp  go to state 85


State 74

   30 condition: exp GE • exp

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '*'    shift, and go to state 26

    exp  go to state 86


State 75

   20 stmt: WHILE M '(' condition • ')' M bs '{' stmts '}' es
   21 condition: condition • OR M condition
   22          | condition • AND M condition

    AND  shift, and go to state 66
    OR   shift, and go to state 67
    ')'  shift, and go to state 87


State 76

   37 exp_seq: exp_seq ',' exp •
   41 exp: exp • '+' exp
   42    | exp • '-' exp
   43    | exp • '*' exp
   44    | exp • '/' exp

    '-'  shift, and go to state 38
    '+'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 37 (exp_seq)


State 77

   24 condition: '(' condition ')' •

    $default  reduce using rule 24 (condition)


State 78

   22 condition: condition AND M • condition

    error  shift, and go to state 55
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '!'    shift, and go to state 56
    '*'    shift, and go to state 26
    '('    shift, and go to state 57

    condition  go to state 88
    exp        go to state 59


State 79

   21 condition: condition OR M • condition

    error  shift, and go to state 55
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    '!'    shift, and go to state 56
    '*'    shift, and go to state 26
    '('    shift, and go to state 57

    condition  go to state 89
    exp        go to state 59


State 80

   18 stmt: IF '(' condition ')' M • bs '{' stmts '}' es
   19     | IF '(' condition ')' M • bs '{' stmts '}' es N ELSE M bs '{' stmts '}' es

    $default  reduce using rule 34 (bs)

    bs  go to state 90


State 81

   25 condition: exp EQ exp •
   41 exp: exp • '+' exp
   42    | exp • '-' exp
   43    | exp • '*' exp
   44    | exp • '/' exp

    '-'  shift, and go to state 38
    '+'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 25 (condition)


State 82

   26 condition: exp NE exp •
   41 exp: exp • '+' exp
   42    | exp • '-' exp
   43    | exp • '*' exp
   44    | exp • '/' exp

    '-'  shift, and go to state 38
    '+'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 26 (condition)


State 83

   27 condition: exp LT exp •
   41 exp: exp • '+' exp
   42    | exp • '-' exp
   43    | exp • '*' exp
   44    | exp • '/' exp

    '-'  shift, and go to state 38
    '+'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 27 (condition)


State 84

   28 condition: exp LE exp •
   41 exp: exp • '+' exp
   42    | exp • '-' exp
   43    | exp • '*' exp
   44    | exp • '/' exp

    '-'  shift, and go to state 38
    '+'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 28 (condition)


State 85

   29 condition: exp GT exp •
   41 exp: exp • '+' exp
   42    | exp • '-' exp
   43    | exp • '*' exp
   44    | exp • '/' exp

    '-'  shift, and go to state 38
    '+'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 29 (condition)


State 86

   30 condition: exp GE exp •
   41 exp: exp • '+' exp
   42    | exp • '-' exp
   43    | exp • '*' exp
   44    | exp • '/' exp

    '-'  shift, and go to state 38
    '+'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 30 (condition)


State 87

   20 stmt: WHILE M '(' condition ')' • M bs '{' stmts '}' es

    $default  reduce using rule 32 (M)

    M  go to state 91


State 88

   21 condition: condition • OR M condition
   22          | condition • AND M condition
   22          | condition AND M condition •

    $default  reduce using rule 22 (condition)


State 89

   21 condition: condition • OR M condition
   21          | condition OR M condition •
   22          | condition • AND M condition

    AND  shift, and go to state 66

    $default  reduce using rule 21 (condition)


State 90

   18 stmt: IF '(' condition ')' M bs • '{' stmts '}' es
   19     | IF '(' condition ')' M bs • '{' stmts '}' es N ELSE M bs '{' stmts '}' es

    '{'  shift, and go to state 92


State 91

   20 stmt: WHILE M '(' condition ')' M • bs '{' stmts '}' es

    $default  reduce using rule 34 (bs)

    bs  go to state 93


State 92

   18 stmt: IF '(' condition ')' M bs '{' • stmts '}' es
   19     | IF '(' condition ')' M bs '{' • stmts '}' es N ELSE M bs '{' stmts '}' es

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    IF     shift, and go to state 28
    WHILE  shift, and go to state 29
    INT    shift, and go to state 9
    '*'    shift, and go to state 26
    ';'    shift, and go to state 30

    var_dec  go to state 31
    stmts    go to state 94
    stmt     go to state 33
    exp      go to state 34


State 93

   20 stmt: WHILE M '(' condition ')' M bs • '{' stmts '}' es

    '{'  shift, and go to state 95


State 94

   14 stmts: stmts • M stmt
   18 stmt: IF '(' condition ')' M bs '{' stmts • '}' es
   19     | IF '(' condition ')' M bs '{' stmts • '}' es N ELSE M bs '{' stmts '}' es

    '}'  shift, and go to state 96

    $default  reduce using rule 32 (M)

    M  go to state 46


State 95

   20 stmt: WHILE M '(' condition ')' M bs '{' • stmts '}' es

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    IF     shift, and go to state 28
    WHILE  shift, and go to state 29
    INT    shift, and go to state 9
    '*'    shift, and go to state 26
    ';'    shift, and go to state 30

    var_dec  go to state 31
    stmts    go to state 97
    stmt     go to state 33
    exp      go to state 34


State 96

   18 stmt: IF '(' condition ')' M bs '{' stmts '}' • es
   19     | IF '(' condition ')' M bs '{' stmts '}' • es N ELSE M bs '{' stmts '}' es

    $default  reduce using rule 35 (es)

    es  go to state 98


State 97

   14 stmts: stmts • M stmt
   20 stmt: WHILE M '(' condition ')' M bs '{' stmts • '}' es

    '}'  shift, and go to state 99

    $default  reduce using rule 32 (M)

    M  go to state 46


State 98

   18 stmt: IF '(' condition ')' M bs '{' stmts '}' es •
   19     | IF '(' condition ')' M bs '{' stmts '}' es • N ELSE M bs '{' stmts '}' es

    ELSE      reduce using rule 33 (N)
    $default  reduce using rule 18 (stmt)

    N  go to state 100


State 99

   20 stmt: WHILE M '(' condition ')' M bs '{' stmts '}' • es

    $default  reduce using rule 35 (es)

    es  go to state 101


State 100

   19 stmt: IF '(' condition ')' M bs '{' stmts '}' es N • ELSE M bs '{' stmts '}' es

    ELSE  shift, and go to state 102


State 101

   20 stmt: WHILE M '(' condition ')' M bs '{' stmts '}' es •

    $default  reduce using rule 20 (stmt)


State 102

   19 stmt: IF '(' condition ')' M bs '{' stmts '}' es N ELSE • M bs '{' stmts '}' es

    $default  reduce using rule 32 (M)

    M  go to state 103


State 103

   19 stmt: IF '(' condition ')' M bs '{' stmts '}' es N ELSE M • bs '{' stmts '}' es

    $default  reduce using rule 34 (bs)

    bs  go to state 104


State 104

   19 stmt: IF '(' condition ')' M bs '{' stmts '}' es N ELSE M bs • '{' stmts '}' es

    '{'  shift, and go to state 105


State 105

   19 stmt: IF '(' condition ')' M bs '{' stmts '}' es N ELSE M bs '{' • stmts '}' es

    error  shift, and go to state 23
    NUM    shift, and go to state 24
    ID     shift, and go to state 25
    IF     shift, and go to state 28
    WHILE  shift, and go to state 29
    INT    shift, and go to state 9
    '*'    shift, and go to state 26
    ';'    shift, and go to state 30

    var_dec  go to state 31
    stmts    go to state 106
    stmt     go to state 33
    exp      go to state 34


State 106

   14 stmts: stmts • M stmt
   19 stmt: IF '(' condition ')' M bs '{' stmts '}' es N ELSE M bs '{' stmts • '}' es

    '}'  shift, and go to state 107

    $default  reduce using rule 32 (M)

    M  go to state 46


State 107

   19 stmt: IF '(' condition ')' M bs '{' stmts '}' es N ELSE M bs '{' stmts '}' • es

    $default  reduce using rule 35 (es)

    es  go to state 108


State 108

   19 stmt: IF '(' condition ')' M bs '{' stmts '}' es N ELSE M bs '{' stmts '}' es •

    $default  reduce using rule 19 (stmt)
